/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package syntaxdemo

class App {
    String getGreeting() {
        return 'Hello World!'
    }

    static void main(String[] args) {
        def app = new App()
        app.mapDemo()
        app.stringDemo()
        app.numberDemo()
        println app.greeting
    }

    void numberDemo() {
        println "number ======= start"
        byte b = 1
        char  c = 2
        short s = 3
        int   i = 4i
        long  l = 5l
        println "${b} $c $s $i $l"

        BigInteger bi = 6.54321g // 6
        println bi

        float f1 = 1.0f
        Float f2 = 2.0f
        double d1 = 1.0d
        Double d2 = 2.0d
        println "$f1 $f2 $d1 $d2"

        BigDecimal bd = 3.45678912345g
        println bd



        println "number ======= end"
    }

    void stringDemo() {
        println "string ======= start"

        def func1 = { w -> w << 4 }
        println func1(100)

        println "1 + 2 == ${-> 3}"
        println "1 + 2 == ${ w -> w << 3}" // 不理解,w哪来的？ 输出居然是 1 + 2 == 3

        println '''
        1
        1
        1
        '''
        println """
        多行2
        22
        """

        def regxPattern = /.*foo.*/
        println regxPattern

        def token = 'safa'
        def regx2Pattern = /^${token}.+?other$/
        println regx2Pattern

        def dollar = $/
        bbb
            ${token}
            aaa
            bbb

        /$
        println dollar

        println "string ======= end"
    }

    void mapDemo() {
        def map1 = [:]
        println "map ======= start"

        map1."an identifier with a space and double quotes" = "ALLOWED"
        map1.'with-dash-signs-and-single-quotes' = "ALLOWED"

        assert map1."an identifier with a space and double quotes" == "ALLOWED"
        assert map1.'with-dash-signs-and-single-quotes' == "ALLOWED"

        println ''
        println map1.dump()

        map1.each { k, v -> 
            println "## $k => $v"
        }


        def map2 = [
            aaa: "bbb",
            "bbb": "123123",
            "cc c": 123123,
        ]

        println ''
        println map2.dump()

        for (pair in map2) {
            println "@@ ${pair.key} => ${pair.value}"
        }

        println "map ======= end"
    }
}
